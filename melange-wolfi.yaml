NOTE: I belive this will work, when wolfi supports aarch64, ie https://packages.wolfi.dev/os/aarch64/APKINDEX.tar.gz exists
  - can't currently build x86_64 either, because cargo just dies (seemingly sig9'd, I guess it contains asm that qemu barfs on)

package:
  name: override-operator
  # TODO: take as arg or something
  version: 0.0.4
  description: TODO
  target-architecture: [all] # bails on a lot of them which aren't supported yet
  copyright:
    - paths: ["*"]
      licence: Apache-2.0

environment:
  contents:
    keyring:
      - https://packages.wolfi.dev/os/wolfi-signing.rsa.pub
    repositories:
      # Since we build in Wolfi, we seem to need to _run_ in it too (ie use Wolfi in apko)
      # Note that we have to restrict archs to amd64 atm, this isn't a melange or apko thing, it's a wolfi thing: they just don't have APKs in their repo for arm64 (ie https://packages.wolfi.dev/os/aarch64/APKINDEX.tar.gz doesn't exist)
      - https://packages.wolfi.dev/os
    packages:
      - wolfi-base
      - build-base # includes pkgconf, an impl of pkg-config
      # TODO: move to rustls (eg hyper-rustls and the create option)
      - openssl # includes headers
        #- pkgconfig # so openssl crate's build can find system openssl
      - rust-stage0 # Seems to be cargo, rather than rustup[-init]

pipeline:
  - name: Build
    runs: |
      TARGETDIR="$(mktemp -d)"
      cargo build --bin override-operator --release --target-dir "${TARGETDIR}"
      mkdir -p "${{targets.destdir}}/usr/bin"
      mv "${TARGETDIR}/release/override-operator" "${{targets.destdir}}/usr/bin"
